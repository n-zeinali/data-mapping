<?php



namespace Mapping\Providers;

use Illuminate\Support\ServiceProvider;
use Mapping\Interfaces\DataMapperInterface;
use Mapping\Interfaces\EntityInterface;


class MappingServiceProvider extends ServiceProvider
{
    public function register()
    {
        parent::register(); // TODO: Change the autogenerated stub
        $this->getSettingConfig();

    }

    public function boot()
    {
        $this->bindEntityMapper(config()->get("settings"));
        $this->bindDataMapper(config()->get("settings"));
    }

    /**
     * @param mixed $active_api
     * @return void
     */
    public function bindEntityMapper(mixed $active_api): void
    {

        app()->singleton(EntityInterface::class, function () use ($active_api) {
            return new $active_api["entity_name"];
        });
    }

    /**
     * @param mixed $active_api
     * @return void
     */
    public function bindDataMapper(mixed $active_api): void
    {
        app()->singleton(DataMapperInterface::class, function () use ($active_api) {
            return new $active_api["data_mapper"];
        });
    }

    /**
     * @return void
     * This Method Is To Get Setting Config
     */
    public function getSettingConfig(): void
    {
        $this->mergeConfigFrom(
            __DIR__ . '/../Config/settings.php',
            'settings'
        );
    }


}

